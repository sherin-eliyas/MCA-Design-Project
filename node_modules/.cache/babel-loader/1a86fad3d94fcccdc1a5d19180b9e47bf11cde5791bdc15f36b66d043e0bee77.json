{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLG\\\\project\\\\ndm\\\\src\\\\components\\\\admin.js\",\n  _s = $RefreshSig$();\n// admin.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [applicationData, setApplicationData] = useState([]);\n  useEffect(() => {\n    fetchApplicationData();\n  }, []);\n  const fetchApplicationData = async () => {\n    try {\n      // Make an API request to fetch data from the application table\n      const response = await fetch(\"http://localhost:3001/api/get-application-data\");\n      const data = await response.json();\n      if (data.success) {\n        // Update the state with the retrieved application data\n        setApplicationData(data.applicationData);\n      } else {\n        // Handle error scenario\n        console.error(\"Error fetching application data:\", data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching application data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Application received:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), applicationData.map((app, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", app.email_id]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"eqWUfr2YFJPxfO2bzpzf/z98mrM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","Admin","_s","location","navigate","applicationData","setApplicationData","fetchApplicationData","response","fetch","data","json","success","console","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","app","index","email_id","_c","$RefreshReg$"],"sources":["D:/CLG/project/ndm/src/components/admin.js"],"sourcesContent":["// admin.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst Admin = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [applicationData, setApplicationData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchApplicationData();\r\n  }, []);\r\n\r\n  const fetchApplicationData = async () => {\r\n    try {\r\n      // Make an API request to fetch data from the application table\r\n      const response = await fetch(\r\n        \"http://localhost:3001/api/get-application-data\"\r\n      );\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        // Update the state with the retrieved application data\r\n        setApplicationData(data.applicationData);\r\n      } else {\r\n        // Handle error scenario\r\n        console.error(\"Error fetching application data:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching application data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Page</h2>\r\n      <ul>\r\n        <h2>Application received:</h2>\r\n        {applicationData.map((app, index) => (\r\n          <li key={index}> {app.email_id}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACdW,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDACF,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB;QACAN,kBAAkB,CAACI,IAAI,CAACL,eAAe,CAAC;MAC1C,CAAC,MAAM;QACL;QACAQ,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEJ,IAAI,CAACK,OAAO,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7Bf,eAAe,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC9BvB,OAAA;QAAAgB,QAAA,GAAgB,GAAC,EAACM,GAAG,CAACE,QAAQ;MAAA,GAArBD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,KAAK;EAAA,QACQJ,WAAW,EACXC,WAAW;AAAA;AAAA2B,EAAA,GAFxBxB,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}