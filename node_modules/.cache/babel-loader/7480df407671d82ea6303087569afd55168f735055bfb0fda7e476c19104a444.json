{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLG\\\\project\\\\ndm\\\\src\\\\components\\\\admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [applicationData, setApplicationData] = useState([]);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    fetchApplicationData();\n    fetchPendingRequests();\n  }, []);\n  const fetchApplicationData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/get-application-data\");\n      const data = await response.json();\n      if (data.success) {\n        setApplicationData(data.applicationData);\n      } else {\n        console.error(\"Error fetching application data:\", data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching application data:\", error);\n    }\n  };\n  const fetchPendingRequests = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/api/pending-requests\");\n      const data = await response.json();\n      if (data.success) {\n        setPendingRequests(data.requests);\n      } else {\n        console.error(\"Error fetching pending requests:\", data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching pending requests:\", error);\n    }\n  };\n  const handleApprove = async (id, type, rollNumber) => {\n    rollNumber = applicationData.map(app => app.roll_number);\n    try {\n      const response = await fetch(`http://localhost:3001/api/api/insert-student-detailss`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(rollNumber)\n      });\n    } catch (error) {\n      console.error(`Error approving ${type}:`, error);\n    }\n  };\n  const groupRequestsByRollNumber = () => {\n    const groupedRequests = {};\n    pendingRequests.forEach(request => {\n      const {\n        roll_number\n      } = request;\n      if (!groupedRequests[roll_number]) {\n        groupedRequests[roll_number] = [];\n      }\n      groupedRequests[roll_number].push(request);\n    });\n    return groupedRequests;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logoutButton\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pending Requests:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), Object.entries(groupRequestsByRollNumber()).map(([rollNumber, requests]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `Roll Number: ${rollNumber}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: requests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [request.department_name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleApprove(request.id, \"request\", parseInt(rollNumber)),\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, request.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, rollNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Applications received:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: applicationData.map((app, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [app.email_id, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleApprove(app.id, \"application\", app.rollNumber),\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"WQiGWnvbJ29Wqj5cewu0zMmTbTg=\", false, function () {\n  return [useNavigate];\n});\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Admin","_s","applicationData","setApplicationData","pendingRequests","setPendingRequests","navigate","handleLogout","fetchApplicationData","fetchPendingRequests","response","fetch","data","json","success","console","error","message","requests","handleApprove","id","type","rollNumber","map","app","roll_number","method","headers","body","JSON","stringify","groupRequestsByRollNumber","groupedRequests","forEach","request","push","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","department_name","parseInt","index","email_id","_c","$RefreshReg$"],"sources":["D:/CLG/project/ndm/src/components/admin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Admin = () => {\r\n  const [applicationData, setApplicationData] = useState([]);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApplicationData();\r\n    fetchPendingRequests();\r\n  }, []);\r\n\r\n  const fetchApplicationData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/api/get-application-data\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setApplicationData(data.applicationData);\r\n      } else {\r\n        console.error(\"Error fetching application data:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching application data:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPendingRequests = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:3001/api/pending-requests\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setPendingRequests(data.requests);\r\n      } else {\r\n        console.error(\"Error fetching pending requests:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching pending requests:\", error);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (id, type, rollNumber) => {\r\n    rollNumber = applicationData.map((app) => app.roll_number);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3001/api/api/insert-student-detailss`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(rollNumber),\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(`Error approving ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  const groupRequestsByRollNumber = () => {\r\n    const groupedRequests = {};\r\n    pendingRequests.forEach((request) => {\r\n      const { roll_number } = request;\r\n      if (!groupedRequests[roll_number]) {\r\n        groupedRequests[roll_number] = [];\r\n      }\r\n      groupedRequests[roll_number].push(request);\r\n    });\r\n    return groupedRequests;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"logoutButton\" onClick={handleLogout}>\r\n        Logout\r\n      </button>\r\n      <h2>Admin Page</h2>\r\n      <div>\r\n        <h2>Pending Requests:</h2>\r\n        {Object.entries(groupRequestsByRollNumber()).map(\r\n          ([rollNumber, requests]) => (\r\n            <div key={rollNumber}>\r\n              <h3>{`Roll Number: ${rollNumber}`}</h3>\r\n              <ul>\r\n                {requests.map((request) => (\r\n                  <li key={request.id}>\r\n                    {request.department_name}\r\n                    <button\r\n                      onClick={() =>\r\n                        handleApprove(\r\n                          request.id,\r\n                          \"request\",\r\n                          parseInt(rollNumber)\r\n                        )\r\n                      }\r\n                    >\r\n                      Approve\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n      <div>\r\n        <h2>Applications received:</h2>\r\n        <ul>\r\n          {applicationData.map((app, index) => (\r\n            <li key={index}>\r\n              {app.email_id}\r\n              <button\r\n                onClick={() =>\r\n                  handleApprove(app.id, \"application\", app.rollNumber)\r\n                }\r\n              >\r\n                Approve\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}